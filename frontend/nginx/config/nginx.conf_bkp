#auto detects a good number of processes to run
worker_processes auto;

#Provides the configuration file context in which the directives that affect connection processing are specified.
events {
    # Sets the maximum number of simultaneous connections that can be opened by a worker process. 
    worker_connections 8000;
    # Tells the worker to accept multiple connections at a time
    multi_accept on;
}



http {
    # Sets the path, format, and configuration for a buffered log write
    log_format  custom  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    ssl_certificate /etc/letsencrypt/live/myezbar.ml/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/myezbar.ml/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    server {
        server_name myezbar.ml www.myezbar.ml;
        
        # save logs here
        access_log /var/log/nginx/access.log custom;
        error_log  /var/log/nginx/error.log  debug;
        # where the root here
        root /var/www;
        listen 443 ssl; # managed by Certbot
        
        # what file to server as index
        index index.html index.htm;

        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to redirecting to index.html
            try_files $uri $uri/ /index.html;
        }

        # Media: images, icons, video, audio, HTC
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
          expires 1M;
          add_header Cache-Control "public";
        }

        # Javascript and CSS files
        location ~* \.(?:css|js)$ {
            try_files $uri =404;
            expires 1y;
            add_header Cache-Control "public";
        }


        # Any route containing a file extension (e.g. /devicesfile.js)
        location ~ ^.+\..+$ {
            try_files $uri =404;
        }
    }



    server{
        listen 443 ssl; # managed by Certbot
        access_log /var/log/nginx/access.log custom;
        error_log  /var/log/nginx/error.log  debug;
        server_name api.myezbar.ml;

         location / {
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-NginX-Proxy true;
                proxy_pass  http://bizinv-apiserver:3000;
                proxy_redirect off;
                proxy_set_header Host $host;
        }
    }

    server {
            
        if ($host = www.myezbar.ml) {
            return 301 https://$host$request_uri;
        } # managed by Certbot


        if ($host = api.myezbar.ml) {
            return 301 https://$host$request_uri;
        } # managed by Certbot


        if ($host = myezbar.ml) {
            return 301 https://$host$request_uri;
        } # managed by Certbot


        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  myezbar.ml www.myezbar.ml api.myezbar.ml;
        return 404; # managed by Certbot

        }



}